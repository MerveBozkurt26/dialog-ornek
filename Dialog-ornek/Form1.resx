<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>